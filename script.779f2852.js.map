{"version":3,"sources":["js/model.js","js/planetGenerator.js","js/script.js"],"names":["Star","lifeSpan","pos","element","ringColors","root","document","documentElement","spaceContainer","querySelector","PlanetGenerator","illo","bodies","sun","sunSur","sunSur2","sunSur3","mercury","venus","earth","earthSouthPole","earthNorthPole","africa","moon","mars","phobos","deimos","pallas","ceres","juno","vesta","jupiter","io","europa","ganymede","callisto","saturn","mimas","enceladus","tethys","dione","rhea","titan","hyperion","iapetus","saturnRings","uranus","miranda","ariel","umbriel","titania","oberon","neptune","triton","Zdog","Shape","addTo","stroke","coreSize","color","Ellipse","diameter","fill","backface","rotate","x","Math","PI","path","y","z","closed","ringSeparation","index","round","random","length","push","quarters","createSun","createMercury","createVenus","createEarth","createMars","createJupiter","createSaturn","createUranus","createNeptune","clientWidth","clientHeight","createElement","classList","add","style","left","top","colorVal","setProperty","appendChild","cycleStars","stars","forEach","star","remove","planetGenerator","createStar","lookAtBody","body","xCamPos","translate","yCamPos","translatePlanet","planet","a","b","radius","theta","cos","sin","translatePlanetFeature","feature","offset","translateSatellite","satellite","handleScroll","evt","event","direction","detail","wheelDelta","zoomRange","value","console","log","searchField","searchButton","addEventListener","searchedBody","undefined","focusedBody","Illustration","dragRotate","resize","zoom","createPlanets","animate","updateRenderGraph","requestAnimationFrame","setInterval","time","Date","getTime"],"mappings":";AAKK,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EALQA,IAAAA,EACT,SAAYC,EAAAA,EAAUC,EAAKC,GAAS,EAAA,KAAA,GAC3BF,KAAAA,SAAWA,EACXC,KAAAA,IAAMA,EACNC,KAAAA,QAAUA,GAClB,QAAA,KAAA;;ACuaA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EA5aL,IAAA,EAAA,QAAA,cA4aK,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA3aL,IAAMC,EAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAE3FC,EAAOC,SAASC,gBAChBC,EAAiBF,SAASG,cAAc,mBAEjCC,EAAAA,WACGC,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACTA,KAAAA,KAAOA,EAcPC,KAAAA,OAAS,CACVC,SAZAA,EAaAC,YAbKA,EAcLC,aAdaA,EAebC,aAfsBA,EAgBtBC,aAfAA,EAgBAC,WAfAA,EAgBAC,WAfAA,EAgBAC,oBAhBOA,EAiBPC,oBAjBuBA,EAkBvBC,YAlBuCA,EAmBvCC,UAnB+CA,EAoB/CC,UAnBAA,EAoBAC,YApBMA,EAqBNC,YArBcA,EAsBdC,YArBAA,EAsBAC,WAtBQA,EAuBRC,UAvBeA,EAwBfC,WAxBqBA,EAyBrBC,aAxBAA,EAyBAC,QAzBSA,EA0BTC,YA1BaA,EA2BbC,cA3BqBA,EA4BrBC,cA5B+BA,EA6B/BC,YA5BAA,EA6BAC,WA7BQA,EA8BRC,eA9BeA,EA+BfC,YA/B0BA,EAgC1BC,WAhCkCA,EAiClCC,UAjCyCA,EAkCzCC,WAlC+CA,EAmC/CC,cAnCsDA,EAoCtDC,aApCgEA,EAqChEC,iBArCyEA,EAsCzEC,YArCAA,EAsCAC,aAtCQA,EAuCRC,WAvCiBA,EAwCjBC,aAxCwBA,EAyCxBC,aAzCiCA,EA0CjCC,YA1C0CA,EA2C1CC,aA1CAA,EA2CAC,YA3CSA,GAwZhB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YAxWW,MAAA,WAGHzC,KAAAA,OAAOC,IAAM,IAAIyC,KAAKC,MAAM,CAC7BC,MAAO,KAAK7C,KACZ8C,OAAQC,IACRC,MAAO,YAGN/C,KAAAA,OAAOE,OAAS,IAAIwC,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQC,IACRC,MAAO,cAGN/C,KAAAA,OAAOG,QAAU,IAAIuC,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQC,IACRC,MAAO,cAGN/C,KAAAA,OAAOI,QAAU,IAAIsC,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQC,IACRC,MAAO,gBAgVd,CAAA,IAAA,gBA5Ue,MAAA,WACP/C,KAAAA,OAAOK,QAAU,IAAIqC,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,cAwUd,CAAA,IAAA,cApUa,MAAA,WACL/C,KAAAA,OAAOM,MAAQ,IAAIoC,KAAKC,MAAM,CAC/BC,MAAO,KAAK7C,KACZ8C,OAAQ,GACRE,MAAO,cAgUd,CAAA,IAAA,cA5Ta,MAAA,WACL/C,KAAAA,OAAOO,MAAQ,IAAImC,KAAKC,MAAM,CAC/BC,MAAO,KAAK7C,KACZ8C,OAAQ,GACRE,MAAO,YAGN/C,KAAAA,OAAOQ,eAAiB,IAAIkC,KAAKM,QAAQ,CAC1CJ,MAAO,KAAK7C,KACZkD,SAAU,EACVJ,OAAQ,GACRK,MAAM,EACNH,MAAO,OACPI,SAAU,SAGTnD,KAAAA,OAAOS,eAAiB,IAAIiC,KAAKM,QAAQ,CAC1CJ,MAAO,KAAK7C,KACZkD,SAAU,EACVJ,OAAQ,GACRK,MAAM,EACNH,MAAO,OACPI,SAAU,SAGTnD,KAAAA,OAAOU,OAAS,IAAIgC,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZqD,OAAQ,CAAEC,EAAGC,KAAKC,IAAM,GACxBC,KAAM,CACF,CAAEH,EAAG,GAAKI,EAAG,EAAGC,EAAG,IACnB,CAAEL,GAAI,EAAII,EAAG,EAAGC,EAAG,IACnB,CAAEL,EAAG,EAAGI,EAAG,EAAGC,EAAG,IACjB,CAAEL,EAAG,EAAGI,EAAG,EAAGC,EAAG,IACjB,CAAEL,EAAG,EAAGI,EAAG,EAAGC,GAAI,GAClB,CAAEL,EAAG,IAAKI,EAAG,EAAGC,GAAI,GACpB,CAAEL,EAAG,EAAGI,EAAG,IAAKC,GAAI,IACpB,CAAEL,EAAG,EAAGI,GAAI,GAAKC,GAAI,KAEzBR,MAAM,EACNS,QAAQ,EACRd,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOW,KAAO,IAAI+B,KAAKC,MAAM,CAC9BC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,cA6Qd,CAAA,IAAA,aAxQY,MAAA,WACJ/C,KAAAA,OAAOY,KAAO,IAAI8B,KAAKC,MAAM,CAC9BC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOc,OAAS,IAAI4B,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOa,OAAS,IAAI6B,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,cAwPd,CAAA,IAAA,gBAjPe,MAAA,WACP/C,KAAAA,OAAOmB,QAAU,IAAIuB,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQ,GACRE,MAAO,YAGN/C,KAAAA,OAAOoB,GAAK,IAAIsB,KAAKC,MAAM,CAC5BC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOqB,OAAS,IAAIqB,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOsB,SAAW,IAAIoB,KAAKC,MAAM,CAClCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOuB,SAAW,IAAImB,KAAKC,MAAM,CAClCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,cAqNd,CAAA,IAAA,eAjNc,MAAA,WAEN/C,KAAAA,OAAOiC,YAAc,GAErBjC,KAAAA,OAAOwB,OAAS,IAAIkB,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQ,GACRE,MAAO,YAGN/C,KAAAA,OAAOyB,MAAQ,IAAIiB,KAAKC,MAAM,CAC/BC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAO0B,UAAY,IAAIgB,KAAKC,MAAM,CACnCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAO2B,OAAS,IAAIe,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAO4B,MAAQ,IAAIc,KAAKC,MAAM,CAC/BC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAO6B,KAAO,IAAIa,KAAKC,MAAM,CAC9BC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAO8B,MAAQ,IAAIY,KAAKC,MAAM,CAC/BC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAO+B,SAAW,IAAIW,KAAKC,MAAM,CAClCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOgC,QAAU,IAAIU,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAKN,IAFDa,IAAAA,EAAiB,GAEZC,EAAQ,EAAGA,GAAS,GAAIA,IAAS,CAChCd,IAAAA,EAAQvD,EAAW8D,KAAKQ,MAAMR,KAAKS,SAAWvE,EAAWwE,SAC1DhE,KAAAA,OAAOiC,YAAYgC,KAAK,IAAIvB,KAAKM,QAAQ,CAC1CJ,MAAO,KAAK7C,KACZkD,SALK,GAKYW,EACjBf,OAAQ,EACRE,MAAOA,EACPmB,SAAU,KAETlE,KAAAA,OAAOiC,YAAYgC,KAAK,IAAIvB,KAAKM,QAAQ,CAC1CJ,MAAO,KAAK7C,KACZkD,SAZK,GAYYW,EACjBf,OAAQ,EACRO,OAAQ,CAAEC,EAAGC,KAAKC,IAClBR,MAAOA,EACPmB,SAAU,KAETlE,KAAAA,OAAOiC,YAAYgC,KAAK,IAAIvB,KAAKM,QAAQ,CAC1CJ,MAAO,KAAK7C,KACZkD,SApBK,GAoBYW,EACjBf,OAAQ,EACRO,OAAQ,CAAEK,EAAGH,KAAKC,IAClBR,MAAOA,EACPmB,SAAU,KAETlE,KAAAA,OAAOiC,YAAYgC,KAAK,IAAIvB,KAAKM,QAAQ,CAC1CJ,MAAO,KAAK7C,KACZkD,SA5BK,GA4BYW,EACjBf,OAAQ,EACRO,OAAQ,CAAEM,EAAGJ,KAAKC,IAClBR,MAAOA,EACPmB,SAAU,KAGdN,IACAA,IACAA,OAiHP,CAAA,IAAA,eA1Gc,MAAA,WAEN5D,KAAAA,OAAOkC,OAAS,IAAIQ,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQ,GACRE,MAAO,YAGN/C,KAAAA,OAAOmC,QAAU,IAAIO,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOoC,MAAQ,IAAIM,KAAKC,MAAM,CAC/BC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOqC,QAAU,IAAIK,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOsC,QAAU,IAAII,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,YAGN/C,KAAAA,OAAOuC,OAAS,IAAIG,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,cAuEd,CAAA,IAAA,gBAlEe,MAAA,WAEP/C,KAAAA,OAAOwC,QAAU,IAAIE,KAAKC,MAAM,CACjCC,MAAO,KAAK7C,KACZ8C,OAAQ,GACRE,MAAO,YAGN/C,KAAAA,OAAOyC,OAAS,IAAIC,KAAKC,MAAM,CAChCC,MAAO,KAAK7C,KACZ8C,OAAQ,EACRE,MAAO,cAuDd,CAAA,IAAA,gBAnDahD,MAAAA,SAAAA,GAsBH,OApBFA,KAAAA,KAAOA,EAEPoE,KAAAA,YAEAC,KAAAA,gBAEAC,KAAAA,cAEAC,KAAAA,cAEAC,KAAAA,aAEAC,KAAAA,gBAEAC,KAAAA,eAEAC,KAAAA,eAEAC,KAAAA,gBAEE,KAAK3E,SA6Bf,CAAA,IAAA,aAzBY,MAAA,WACHV,IAAAA,EAAM,CAACgE,KAAKS,UAAYnE,EAAegF,YAAc,IAAKtB,KAAKS,UAAYnE,EAAeiF,aAAe,KACzGtF,EAAUG,SAASoF,cAAc,OACvCvF,EAAQwF,UAAUC,IAAI,QACtBzF,EAAQ0F,MAAMC,KAAO5F,EAAI,GAAK,KAC9BC,EAAQ0F,MAAME,IAAM7F,EAAI,GAAK,KACvBD,IAAAA,EAA2B,IAAhBiE,KAAKS,SAIhBqB,EAAW9B,KAAKQ,MAAsB,IAAhBR,KAAKS,UAc1B,OAbHqB,GAAY,GACZ7F,EAAQwF,UAAUC,IAAI,aACfI,GAAY,GACnB7F,EAAQwF,UAAUC,IAAI,WACfI,GAAY,GACnB7F,EAAQwF,UAAUC,IAAI,cACfI,GAAY,KACnB7F,EAAQwF,UAAUC,IAAI,YAE1BzF,EAAQwF,UAAUC,IAAI,aACtBvF,EAAKwF,MAAMI,YAAY,cAAgC,IAAhB/B,KAAKS,SAAkB,KAC9DnE,EAAe0F,YAAY/F,GAEpB,IAAIH,EAAJ,KAASC,EAAUC,EAAKC,OAClC,EAtaQO,GAsaR,QAAA,gBAAA;;AC5UL,aAhGA,IAAA,EAAA,QAAA,wBAIA,SAASyF,IACLC,EAAMC,QAAQ,SAAAC,GACVA,EAAKrG,SAAWqG,EAAKrG,SAAW,IAC5BqG,EAAKrG,SAAW,GAChBqG,EAAKnG,QAAQoG,WAErBH,EAAMvB,KAAK2B,EAAgBC,cAG/B,SAASC,EAAWC,GAChBC,GAAoBD,EAAKE,UAAU5C,EACnC6C,GAAoBH,EAAKE,UAAUxC,EAGvC,SAAS0C,EAAgBC,EAAQC,EAAGC,EAAGC,EAAQC,GACvCnD,IAAAA,EAAIgD,EAAIE,EAASjD,KAAKmD,IAAID,GAC1B/C,EAAI6C,EAAIC,EAASjD,KAAKoD,IAAIF,GAE9BnD,GAAQ2C,EACRvC,GAAQyC,EAERE,EAAOH,UAAY,CAAE5C,EAAGA,EAAGI,EAAGA,GAGlC,SAASkD,EAAuBP,EAAQQ,EAASC,GACvCxD,IAAAA,EAAI+C,EAAOH,UAAU5C,EAAIwD,EAAO,GAChCpD,EAAI2C,EAAOH,UAAUxC,EAAIoD,EAAO,GAChCnD,EAAI0C,EAAOH,UAAUxC,EAAIoD,EAAO,GAEtCD,EAAQX,UAAY,CAAE5C,EAAGA,EAAGI,EAAGA,EAAGC,EAAGA,GAGzC,SAASoD,EAAmBC,EAAWX,EAAQG,EAAQC,GAC7CnD,IAAAA,EAAI+C,EAAOH,UAAU5C,EAAIkD,EAASjD,KAAKmD,IAAID,GAC3C/C,EAAI2C,EAAOH,UAAUxC,EAAI8C,EAASjD,KAAKoD,IAAIF,GAEjDO,EAAUd,UAAY,CAAE5C,EAAGA,EAAGI,EAAGA,GAGrC,IAAIuD,EAAe,SAASC,GACnBA,IAAKA,EAAMC,OACVC,IAAAA,EAAaF,EAAIG,OAAS,GAAKH,EAAII,WAAa,EAAK,GAAK,EAC5DF,EAAY,EACZG,EAAUC,QAEVD,EAAUC,QAEdC,QAAQC,IAAIN,IAKV3B,EAAQ,GAER8B,EAAY5H,SAASG,cAAc,cACnC6H,EAAchI,SAASG,cAAc,eACrC8H,EAAejI,SAASG,cAAc,kBAC5CH,SAASG,cAAc,gBAAgB+H,iBAAiB,iBAAkBZ,GAAc,GACxFtH,SAASG,cAAc,gBAAgB+H,iBAAiB,aAAcZ,GAAc,GAEpFW,EAAaC,iBAAiB,QAAS,WAC7BC,IAAAA,EAAe7H,EAAO0H,EAAYH,YACnBO,IAAjBD,IACAE,EAAcF,KAItB,IAAI7B,EAAU,EACVE,EAAU,EAIRnG,EAAO,IAAI2C,KAAKsF,aAAa,CAC/BzI,QAAS,eACT0I,YAAY,EACZC,QAAQ,EACRC,KAAM,KAGJvC,EAAkB,IAAI9F,EAAJ,gBAAoBC,GAEtCC,EAAS4F,EAAgBwC,cAAcrI,GAEzCgI,EAAc/H,EAAOC,IAEzB,SAASoI,IACLzC,EAAgB7F,KAAKuI,oBACrBC,sBAAsBF,GAG1BA,IAEAG,YAAY,WACJC,IAAAA,GAAO,IAAIC,MAAOC,UACtBF,IAAe,EACftC,EAAgBnG,EAAOC,IAAK,EAAG,EAAG,EAAG,GACrCkG,EAAgBnG,EAAOE,OAAQ,EAAG,EAAG,EAAG,GACxCiG,EAAgBnG,EAAOG,QAAS,EAAG,EAAG,EAAG,GACzCgG,EAAgBnG,EAAOI,QAAS,EAAG,EAAG,EAAG,GAGzC+F,EAAgBnG,EAAOK,QAAS,EAAG,EAAG,IAAK,KAASoI,GAGpDtC,EAAgBnG,EAAOM,MAAO,EAAG,EAAG,KAAM,KAASmI,GAGnDtC,EAAgBnG,EAAOO,MAAO,EAAG,EAAG,IAAK,KAASkI,GAClD9B,EAAuB3G,EAAOO,MAAOP,EAAOQ,eAAgB,CAAC,EAAG,GAAI,OACpEmG,EAAuB3G,EAAOO,MAAOP,EAAOS,eAAgB,CAAC,EAAG,EAAG,MACnEkG,EAAuB3G,EAAOO,MAAOP,EAAOU,OAAQ,CAAC,EAAG,EAAI,IAC5DoG,EAAmB9G,EAAOW,KAAMX,EAAOO,MAAO,GAAI,KAAQkI,GAG1DtC,EAAgBnG,EAAOY,KAAM,EAAG,EAAG,IAAK,KAAS6H,GACjD3B,EAAmB9G,EAAOc,OAAQd,EAAOY,KAAM,EAAG,KAAQ6H,GAC1D3B,EAAmB9G,EAAOa,OAAQb,EAAOY,KAAM,EAAG,KAAQ6H,GAG1DtC,EAAgBnG,EAAOmB,QAAS,EAAG,EAAG,IAAK,KAAUsH,GACrD3B,EAAmB9G,EAAOoB,GAAIpB,EAAOmB,QAAS,GAAI,KAAQsH,EAAO,KACjE3B,EAAmB9G,EAAOqB,OAAQrB,EAAOmB,QAAS,GAAI,KAASsH,EAAO,KACtE3B,EAAmB9G,EAAOsB,SAAUtB,EAAOmB,QAAS,GAAI,KAASsH,EAAO,KACxE3B,EAAmB9G,EAAOuB,SAAUvB,EAAOmB,QAAS,GAAI,KAASsH,GAGjEtC,EAAgBnG,EAAOwB,OAAQ,EAAG,EAAG,IAAK,KAAUiH,GACpDzI,EAAOiC,YAAYwD,QAAQ,SAAAlG,GACvBuH,EAAmBvH,EAASS,EAAOwB,OAAQ,EAAG,KAElDsF,EAAmB9G,EAAOyB,MAAOzB,EAAOwB,OAAQ,GAAI,KAAQiH,GAC5D3B,EAAmB9G,EAAO0B,UAAW1B,EAAOwB,OAAQ,GAAI,KAASiH,GACjE3B,EAAmB9G,EAAO2B,OAAQ3B,EAAOwB,OAAQ,GAAI,KAAUiH,GAC/D3B,EAAmB9G,EAAO4B,MAAO5B,EAAOwB,OAAQ,GAAI,MAAWiH,GAC/D3B,EAAmB9G,EAAO6B,KAAM7B,EAAOwB,OAAQ,GAAI,MAAWiH,GAC9D3B,EAAmB9G,EAAO8B,MAAO9B,EAAOwB,OAAQ,GAAI,MAAWiH,EAAO,MACtE3B,EAAmB9G,EAAO+B,SAAU/B,EAAOwB,OAAQ,GAAI,KAAUiH,GACjE3B,EAAmB9G,EAAOgC,QAAShC,EAAOwB,OAAQ,GAAI,MAAUiH,GAGhEtC,EAAgBnG,EAAOkC,OAAQ,EAAG,EAAG,IAAK,KAAUuG,GACpD3B,EAAmB9G,EAAOmC,QAASnC,EAAOkC,OAAQ,GAAI,KAASuG,GAC/D3B,EAAmB9G,EAAOoC,MAAOpC,EAAOkC,OAAQ,GAAI,MAAUuG,GAC9D3B,EAAmB9G,EAAOqC,QAASrC,EAAOkC,OAAQ,GAAI,MAAWuG,GACjE3B,EAAmB9G,EAAOsC,QAAStC,EAAOkC,OAAQ,GAAI,KAAUuG,GAChE3B,EAAmB9G,EAAOuC,OAAQvC,EAAOkC,OAAQ,GAAI,MAAWuG,GAGhEtC,EAAgBnG,EAAOwC,QAAS,EAAG,EAAG,IAAM,KAAWiG,GACvD3B,EAAmB9G,EAAOyC,OAAQzC,EAAOwC,QAAS,GAAI,KAAQiG,GAE9D7C,EAAgB7F,KAAKoI,KAAyB,GAAlBb,EAAUC,MAGtCzB,EAAWiC,IACZ","file":"script.779f2852.js","sourceRoot":"../src","sourcesContent":["export class Star {\n    constructor(lifeSpan, pos, element) {\n        this.lifeSpan = lifeSpan;\n        this.pos = pos;\n        this.element = element;\n    }\n\n}","import { Star } from \"./model.js\";\nconst ringColors = ['#706355', '#847364', '#aa9484', '#c9a47f', '#9b7e64', '#7c6452', '#d6ae8a', '#605448'];\n\nconst root = document.documentElement;\nconst spaceContainer = document.querySelector('.spaceContainer');\n\nexport class PlanetGenerator {\n    constructor(illo) {\n        this.illo = illo;\n\n        // Astronomical boddies definition\n        let sun, sunSur, sunSur2, sunSur3,\n            mercury,\n            venus,\n            earth, earthSouthPole, earthNorthPole, africa, moon,\n            mars, phobos, deimos,\n            pallas, ceres, juno, vesta,\n            jupiter, io, europa, ganymede, callisto,\n            saturn, mimas, enceladus, tethys, dione, rhea, titan, hyperion, iapetus, saturnRings,\n            uranus, miranda, ariel, umbriel, titania, oberon,\n            neptune, triton;\n\n        this.bodies = {\n            sun,\n            sunSur,\n            sunSur2,\n            sunSur3,\n            mercury,\n            venus,\n            earth,\n            earthSouthPole,\n            earthNorthPole,\n            africa,\n            moon,\n            mars,\n            phobos,\n            deimos,\n            pallas,\n            ceres,\n            juno,\n            vesta,\n            jupiter,\n            io,\n            europa,\n            ganymede,\n            callisto,\n            saturn,\n            mimas,\n            enceladus,\n            tethys,\n            dione,\n            rhea,\n            titan,\n            hyperion,\n            iapetus,\n            saturnRings,\n            uranus,\n            miranda,\n            ariel,\n            umbriel,\n            titania,\n            oberon,\n            neptune,\n            triton\n        };\n\n    }\n\n    createSun() {\n        const coreSize = 100;\n\n        this.bodies.sun = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: coreSize + 90,\n            color: '#993d10',\n        });\n\n        this.bodies.sunSur = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: coreSize + 100,\n            color: '#ff660050',\n        });\n\n        this.bodies.sunSur2 = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: coreSize + 110,\n            color: '#ffa36650',\n        });\n\n        this.bodies.sunSur3 = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: coreSize + 120,\n            color: '#ffa36650',\n        });\n    }\n\n    createMercury() {\n        this.bodies.mercury = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 5,\n            color: '#8E8E8E',\n        });\n    }\n\n    createVenus() {\n        this.bodies.venus = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 11,\n            color: '#C9C97B',\n        });\n    }\n\n    createEarth() {\n        this.bodies.earth = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 12,\n            color: '#000090',\n        });\n\n        this.bodies.earthSouthPole = new Zdog.Ellipse({\n            addTo: this.illo,\n            diameter: 3,\n            stroke: 0.1,\n            fill: true,\n            color: '#fff',\n            backface: '#fff',\n        });\n\n        this.bodies.earthNorthPole = new Zdog.Ellipse({\n            addTo: this.illo,\n            diameter: 3,\n            stroke: 0.1,\n            fill: true,\n            color: '#fff',\n            backface: '#fff',\n        });\n\n        this.bodies.africa = new Zdog.Shape({\n            addTo: this.illo,\n            rotate: { x: Math.PI / -2 },\n            path: [\n                { x: 0.5, y: 0, z: 0.8 },\n                { x: -0., y: 1, z: 0.8 },\n                { x: 1, y: 2, z: 0.3 },\n                { x: 2, y: 2, z: 0.2 },\n                { x: 3, y: 5, z: -2 },\n                { x: 3.5, y: 2, z: -1 },\n                { x: 4, y: 1.5, z: -0.5 },\n                { x: 3, y: -0.1, z: -0.2 },\n            ],\n            fill: true,\n            closed: true,\n            stroke: 1,\n            color: '#006600'\n        });\n\n        this.bodies.moon = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 3,\n            color: '#808080',\n        });\n\n    }\n\n    createMars() {\n        this.bodies.mars = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 8,\n            color: '#993d10',\n        });\n\n        this.bodies.deimos = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 1,\n            color: '#808080',\n        });\n\n        this.bodies.phobos = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 1,\n            color: '#808080',\n        });\n\n    }\n\n    // function createAsteroidBelt() {}\n\n    createJupiter() {\n        this.bodies.jupiter = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 30,\n            color: '#993d10',\n        });\n\n        this.bodies.io = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 4,\n            color: '#fff2a7',\n        });\n\n        this.bodies.europa = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#b6c9c5',\n        });\n\n        this.bodies.ganymede = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 3,\n            color: '#8b7c78',\n        });\n\n        this.bodies.callisto = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 3,\n            color: '#996e5b',\n        });\n    }\n\n    createSaturn() {\n\n        this.bodies.saturnRings = [];\n\n        this.bodies.saturn = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 28,\n            color: '#993d10',\n        });\n\n        this.bodies.mimas = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.enceladus = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.tethys = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.dione = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.rhea = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.titan = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#d4af82',\n        });\n\n        this.bodies.hyperion = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.iapetus = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        let ringSeparation = 10;\n        const minD = 35;\n        for (let index = 0; index <= 10; index++) {\n            const color = ringColors[Math.round(Math.random() * ringColors.length)];\n            this.bodies.saturnRings.push(new Zdog.Ellipse({\n                addTo: this.illo,\n                diameter: minD + ringSeparation,\n                stroke: 1,\n                color: color,\n                quarters: 1,\n            }));\n            this.bodies.saturnRings.push(new Zdog.Ellipse({\n                addTo: this.illo,\n                diameter: minD + ringSeparation,\n                stroke: 1,\n                rotate: { x: Math.PI },\n                color: color,\n                quarters: 1,\n            }));\n            this.bodies.saturnRings.push(new Zdog.Ellipse({\n                addTo: this.illo,\n                diameter: minD + ringSeparation,\n                stroke: 1,\n                rotate: { y: Math.PI },\n                color: color,\n                quarters: 1,\n            }));\n            this.bodies.saturnRings.push(new Zdog.Ellipse({\n                addTo: this.illo,\n                diameter: minD + ringSeparation,\n                stroke: 1,\n                rotate: { z: Math.PI },\n                color: color,\n                quarters: 1,\n            }));\n\n            ringSeparation++;\n            ringSeparation++;\n            ringSeparation++;\n\n        }\n\n\n    }\n\n    createUranus() {\n\n        this.bodies.uranus = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 15,\n            color: '#6895a9',\n        });\n\n        this.bodies.miranda = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.ariel = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.umbriel = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.titania = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n        this.bodies.oberon = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#575756',\n        });\n\n    }\n\n    createNeptune() {\n\n        this.bodies.neptune = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 15,\n            color: '#4175a9',\n        });\n\n        this.bodies.triton = new Zdog.Shape({\n            addTo: this.illo,\n            stroke: 2,\n            color: '#c3b097',\n        });\n    }\n\n    createPlanets(illo) {\n\n        this.illo = illo;\n\n        this.createSun();\n\n        this.createMercury();\n\n        this.createVenus();\n\n        this.createEarth();\n\n        this.createMars();\n\n        this.createJupiter();\n\n        this.createSaturn();\n\n        this.createUranus();\n\n        this.createNeptune();\n\n        return this.bodies;\n\n    }\n\n    createStar() {\n        const pos = [Math.random() * (spaceContainer.clientWidth - 10), Math.random() * (spaceContainer.clientHeight - 10)];\n        const element = document.createElement(\"div\");\n        element.classList.add('star');\n        element.style.left = pos[0] + \"px\";\n        element.style.top = pos[1] + \"px\";\n        const lifeSpan = Math.random() * 2000;\n\n\n\n        const colorVal = Math.round(Math.random() * 100);\n        if (colorVal <= 75) {\n            element.classList.add(\"starWhite\");\n        } else if (colorVal <= 90) {\n            element.classList.add(\"starRed\");\n        } else if (colorVal <= 98) {\n            element.classList.add(\"starYellow\");\n        } else if (colorVal <= 100) {\n            element.classList.add(\"starBlue\");\n        }\n        element.classList.add(\"starShine\");\n        root.style.setProperty('--shineSize', (Math.random() * 120) + \"%\");\n        spaceContainer.appendChild(element);\n\n        return new Star(lifeSpan, pos, element);\n    }\n\n}","import { PlanetGenerator } from \"./planetGenerator.js\";\n\n\n\nfunction cycleStars() {\n    stars.forEach(star => {\n        star.lifeSpan = star.lifeSpan - 100;\n        if (star.lifeSpan < 0)\n            star.element.remove();\n    });\n    stars.push(planetGenerator.createStar());\n}\n\nfunction lookAtBody(body) {\n    xCamPos = xCamPos - body.translate.x;\n    yCamPos = yCamPos - body.translate.y;\n}\n\nfunction translatePlanet(planet, a, b, radius, theta) {\n    let x = a + radius * Math.cos(theta);\n    let y = b + radius * Math.sin(theta);\n\n    x = x + xCamPos;\n    y = y + yCamPos;\n\n    planet.translate = { x: x, y: y };\n}\n\nfunction translatePlanetFeature(planet, feature, offset) {\n    const x = planet.translate.x + offset[0];\n    const y = planet.translate.y + offset[1];\n    const z = planet.translate.y + offset[2];\n\n    feature.translate = { x: x, y: y, z: z };\n}\n\nfunction translateSatellite(satellite, planet, radius, theta) {\n    const x = planet.translate.x + radius * Math.cos(theta);\n    const y = planet.translate.y + radius * Math.sin(theta);\n\n    satellite.translate = { x: x, y: y };\n}\n\nvar handleScroll = function(evt) {\n    if (!evt) evt = event;\n    const direction = (evt.detail < 0 || evt.wheelDelta > 0) ? 1 : -1;\n    if (direction > 0)\n        zoomRange.value++;\n    else\n        zoomRange.value--;\n\n    console.log(direction);\n\n    // Use the value as you will\n};\n\nconst stars = [];\n\nconst zoomRange = document.querySelector('#zoomRange');\nconst searchField = document.querySelector('#bodySearch');\nconst searchButton = document.querySelector('#bodySearchBtn');\ndocument.querySelector(\".zdog-canvas\").addEventListener('DOMMouseScroll', handleScroll, false); // for Firefox\ndocument.querySelector(\".zdog-canvas\").addEventListener('mousewheel', handleScroll, false); // for everyone else\n\nsearchButton.addEventListener('click', function() {\n    const searchedBody = bodies[searchField.value];\n    if (searchedBody !== undefined)\n        focusedBody = searchedBody;\n});\n\n\nlet xCamPos = 0;\nlet yCamPos = 0;\n\n//setInterval(function() { cycleStars(); }, 100);\n\nconst illo = new Zdog.Illustration({\n    element: '.zdog-canvas',\n    dragRotate: true,\n    resize: true,\n    zoom: 0.3\n});\n\nconst planetGenerator = new PlanetGenerator(illo);\n\nconst bodies = planetGenerator.createPlanets(illo);\n\nlet focusedBody = bodies.sun;\n\nfunction animate() {\n    planetGenerator.illo.updateRenderGraph();\n    requestAnimationFrame(animate);\n}\n\nanimate();\n\nsetInterval(function() {\n    let time = new Date().getTime();\n    time = time * -1;\n    translatePlanet(bodies.sun, 0, 0, 0, 0);\n    translatePlanet(bodies.sunSur, 0, 0, 0, 0);\n    translatePlanet(bodies.sunSur2, 0, 0, 0, 0);\n    translatePlanet(bodies.sunSur3, 0, 0, 0, 0);\n\n    /** Mercury**/\n    translatePlanet(bodies.mercury, 0, 0, 200, 0.0008 * time);\n\n    /** Venus**/\n    translatePlanet(bodies.venus, 0, 0, 250, -0.0004 * time);\n\n    /** Earth**/\n    translatePlanet(bodies.earth, 0, 0, 300, 0.0003 * time);\n    translatePlanetFeature(bodies.earth, bodies.earthSouthPole, [0, 0, -5.78]);\n    translatePlanetFeature(bodies.earth, bodies.earthNorthPole, [0, 0, +5.9]);\n    translatePlanetFeature(bodies.earth, bodies.africa, [0, +5, 0]);\n    translateSatellite(bodies.moon, bodies.earth, 10, 0.002 * time);\n\n    /** Mars**/\n    translatePlanet(bodies.mars, 0, 0, 360, 0.0002 * time);\n    translateSatellite(bodies.deimos, bodies.mars, 9, 0.002 * time);\n    translateSatellite(bodies.phobos, bodies.mars, 5, 0.001 * time);\n\n    /** Jupiter**/\n    translatePlanet(bodies.jupiter, 0, 0, 550, 0.00001 * time);\n    translateSatellite(bodies.io, bodies.jupiter, 20, 0.001 * time + 400);\n    translateSatellite(bodies.europa, bodies.jupiter, 25, 0.0008 * time - 500);\n    translateSatellite(bodies.ganymede, bodies.jupiter, 40, 0.0006 * time + 300);\n    translateSatellite(bodies.callisto, bodies.jupiter, 50, 0.0005 * time);\n\n    /** Saturn**/\n    translatePlanet(bodies.saturn, 0, 0, 750, 0.00005 * time);\n    bodies.saturnRings.forEach(element => {\n        translateSatellite(element, bodies.saturn, 0, 0);\n    });\n    translateSatellite(bodies.mimas, bodies.saturn, 45, 0.001 * time);\n    translateSatellite(bodies.enceladus, bodies.saturn, 50, 0.0009 * time);\n    translateSatellite(bodies.tethys, bodies.saturn, 53, 0.00004 * time);\n    translateSatellite(bodies.dione, bodies.saturn, 58, 0.00008 * -time);\n    translateSatellite(bodies.rhea, bodies.saturn, 61, 0.00007 * -time);\n    translateSatellite(bodies.titan, bodies.saturn, 65, 0.00008 * (time + 4000));\n    translateSatellite(bodies.hyperion, bodies.saturn, 70, 0.00009 * time);\n    translateSatellite(bodies.iapetus, bodies.saturn, 72, 0.0005 * -time);\n\n    /** Uranus**/\n    translatePlanet(bodies.uranus, 0, 0, 950, 0.00002 * time);\n    translateSatellite(bodies.miranda, bodies.uranus, 10, 0.0005 * time);\n    translateSatellite(bodies.ariel, bodies.uranus, 15, 0.0004 * -time);\n    translateSatellite(bodies.umbriel, bodies.uranus, 20, 0.00007 * -time);\n    translateSatellite(bodies.titania, bodies.uranus, 25, 0.00009 * time);\n    translateSatellite(bodies.oberon, bodies.uranus, 30, 0.00002 * -time);\n\n    /** Neptune**/\n    translatePlanet(bodies.neptune, 0, 0, 1000, 0.000008 * time);\n    translateSatellite(bodies.triton, bodies.neptune, 10, 0.001 * time);\n\n    planetGenerator.illo.zoom = zoomRange.value * 0.1;\n\n\n    lookAtBody(focusedBody);\n}, 1);"]}